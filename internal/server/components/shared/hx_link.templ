package shared

type ButtonOptions struct {
  InButtonRow bool
  OnClick templ.ComponentScript
  AlpineOnClick string
  Small bool
  Primary bool
  TypeSubmit bool
}

type HxLinkOptions struct {
  ButtonOptions
  UseButtonStyle bool
  PushURL bool
  Method string
  Swap string
}

templ HxLink(
  targetURL templ.SafeURL,
  targetSelector string,
  opts HxLinkOptions,
) {
  <a 
    if opts.UseButtonStyle {
      class={
        templ.KV("bg-gradient-to-b from-cyan-500 to-indigo-500 hover:from-cyan-600 hover:to-indigo-900 text-white", opts.Primary),
        templ.KV("bg-gradient-to-b from-slate-300 to-slate-500 hover:from-cyan-50 hover:to-indigo-300", !opts.Primary),
        templ.KV("px-4 py-2", !opts.Small),
        templ.KV("px-2 py-1", opts.Small),
        templ.KV("first-of-type:rounded-l-lg last:rounded-r-lg", opts.InButtonRow),
        templ.KV("rounded-lg", !opts.InButtonRow),
      }
    }
    href={ targetURL }
    hx-target={targetSelector}
    if opts.PushURL {
      hx-push-url="true"
    }
    if opts.Method == "" || opts.Method == "get" {
      hx-get={ string(targetURL) }
    }
    if opts.Method == "post" {
      hx-post={ string(targetURL) }
    }
    if opts.Method == "delete" {
      hx-delete={ string(targetURL) }
    }
    if opts.Method == "put" {
      hx-put={ string(targetURL) }
    }
    if opts.Swap != "" {
      hx-swap={ opts.Swap }
    }
  >
    { children... }
  </a>
}

templ Button(opts ButtonOptions) {
  <button 
    if opts.TypeSubmit {
      type="submit"
    } else {
      type="button"
    }
    class={
      templ.KV("bg-gradient-to-b from-cyan-500 to-indigo-500 hover:from-cyan-600 hover:to-indigo-900 text-white", opts.Primary),
      templ.KV("bg-gradient-to-b from-slate-300 to-slate-500 hover:from-cyan-50 hover:to-indigo-300", !opts.Primary),
      templ.KV("px-4 py-2", !opts.Small),
      templ.KV("px-2 py-1", opts.Small),
      templ.KV("first-of-type:rounded-l-lg last:rounded-r-lg", opts.InButtonRow),
      templ.KV("rounded-lg", !opts.InButtonRow),
    }
    if opts.OnClick.Name != "" {
      onclick={ opts.OnClick }
    }
    if opts.AlpineOnClick != "" {
      x-on:click={opts.AlpineOnClick}
    }
  >
    { children... }
  </button>
}