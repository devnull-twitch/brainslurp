package pages

import "fmt"
import "github.com/devnull-twitch/brainslurp/internal/server/components/shared"
import "strings"
import pb_project "github.com/devnull-twitch/brainslurp/lib/proto/project"
import pb_user "github.com/devnull-twitch/brainslurp/lib/proto/user"

templ ProjectSettings(projectObj *pb_project.Project, allUsers []*pb_user.User) {
  <html>
		@header("Project settings")
    @body(0) {
		  @ProjectSettingsBody(projectObj, allUsers)
    }
  </html>
}

func makeProjectSettingsSaveURL(projectNo uint64) templ.SafeURL {
  return templ.URL(fmt.Sprintf("/project/%d/settings", projectNo))
}

func makeUserAlpineData(projectObj *pb_project.Project) string {
  userIds := make([]string, len(projectObj.GetMembers()))
  for i, memberObj := range projectObj.GetMembers() {
    userIds[i] = fmt.Sprintf("%d", memberObj.GetUserNo())
  }
  userList := strings.Join(userIds, ",")

  return fmt.Sprintf("{ users: [%s] }", userList)
}

templ ProjectSettingsBody(projectObj *pb_project.Project, allUsers []*pb_user.User) {
  <div class="container mx-auto">
    <h2 class="text-2xl underline pb-4">Project Settings</h2>
    <div class="w-1/3">
      <form 
        method="POST"
        hx-post={ string(makeProjectSettingsSaveURL(projectObj.GetNumber())) }
        hx-target="#body-content"
      >
        <div>
          @shared.FormField("public", "Make publicly accessible", "checkbox", shared.FormFieldOptions{
            Checked: projectObj.GetPublic(),
          })
        </div>

        <div 
          x-data={ makeUserAlpineData(projectObj) }
          class="flex flex-col gap-2"
        >
          <template x-for="userNo in users">
            <div x-id="[ 'project_member' ]">
              <label x-bind:for="$id('project_member')">User:</label>
              <select
                x-bind:id="$id('project_member')"
                name="project_member"
              >
                for _, userObj := range allUsers {
                  <option
                    value={ fmt.Sprintf("%d", userObj.GetNumber()) }
                    x-bind:selected={ fmt.Sprintf("userNo === %d && 'true'", userObj.GetNumber()) }
                  >
                    { userObj.GetName() }
                  </option>
                }
              </select>
              @shared.Button(shared.ButtonOptions{
                AlpineOnClick: "users = users.filter(id => id != userNo)",
                Small: true,
              }) {
                @shared.Codicon("trash", true)
              }
            </div>
          </template>
          <div>
            @shared.Button(shared.ButtonOptions{
              AlpineOnClick: "users.push(0)",
              Small: true,
            }) {
              @shared.Codicon("add", true)
            }
          </div>
        </div>

        <div>
          @shared.Button(shared.ButtonOptions{
            Primary: true,
            TypeSubmit: true,
          }) {
            Save
          }
        </div>
      </form>
    </div>
  </div>
}