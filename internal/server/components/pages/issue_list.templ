package pages

import "fmt"
import "github.com/devnull-twitch/brainslurp/internal/server/components/shared"
import pb_issue "github.com/devnull-twitch/brainslurp/lib/proto/issue"
import pb_flow "github.com/devnull-twitch/brainslurp/lib/proto/flow"
import pb_view "github.com/devnull-twitch/brainslurp/lib/proto/view"
import pb_tag "github.com/devnull-twitch/brainslurp/lib/proto/tag"
import pb_user "github.com/devnull-twitch/brainslurp/lib/proto/user" 

func makeIssuesFilterPath(projectNo uint64, viewNo uint64) templ.SafeURL {
	return templ.URL(fmt.Sprintf("/project/%d/issues/view/%d", projectNo, viewNo))
}

func makeIssuesUnfilteredPath(projectNo uint64) templ.SafeURL {
	return templ.URL(fmt.Sprintf("/project/%d/issues", projectNo))
}

func makeNewIssuePath(projectNo uint64) templ.SafeURL {
	return templ.URL(fmt.Sprintf("/project/%d/issues/new", projectNo))
}

templ List(
	projectNo uint64,
	issues []*pb_issue.Issue,
	mapFlowToIssue map[uint64][]*pb_flow.Flow,
	views []*pb_view.View,
	tagMap map[uint64]*pb_tag.Tag,
	userMap map[uint64]*pb_user.User,
) {
	<html>
		@header("Issue list")
		@body(projectNo) {
			@ListBody(projectNo, issues, mapFlowToIssue, views, tagMap, userMap)
		}
	</html>
}

templ ListBody(
	projectNo uint64,
	issues []*pb_issue.Issue,
	mapFlowToIssue map[uint64][]*pb_flow.Flow,
	views []*pb_view.View,
	tagMap map[uint64]*pb_tag.Tag,
	userMap map[uint64]*pb_user.User,
) {
	<div class="container mx-auto">
		<h2 class="text-2xl underline pb-4">Issues</h2>
		<div class="flex justify-between pb-4">
			<div class="flex">
				@shared.HxLink(makeIssuesUnfilteredPath(projectNo), "#issue-list", shared.HxLinkOptions{
					ButtonOptions: shared.ButtonOptions{
						InButtonRow: true,
					},
					UseButtonStyle: true,
					PushURL: true,
				}) {
					All
				}
				for _, view := range views {
					@shared.HxLink(makeIssuesFilterPath(projectNo, view.GetNumber()), "#issue-list", shared.HxLinkOptions{
						ButtonOptions: shared.ButtonOptions{
							InButtonRow: true,
						},
						UseButtonStyle: true,
						PushURL: true,
					}) {
						{ view.Title }
					}
				}
				@shared.HxLink(templ.URL("/views/new"), "#body-content", shared.HxLinkOptions{
					ButtonOptions: shared.ButtonOptions{
						InButtonRow: true,
					},
					UseButtonStyle: true,
					PushURL: true,
				}) {
					+ New view
				}
			</div>
			<div class="flex">
				@shared.HxLink(makeNewIssuePath(projectNo), "#body-content", shared.HxLinkOptions{
					UseButtonStyle: true,
					PushURL: true,
				}) {
					+ New issue
				}
			</div>
		</div>
		<div id="issue-list">
			@ListItems(projectNo, issues, mapFlowToIssue, tagMap, userMap)
		</div>
	</div>
}

templ ListItems(
	projectNo uint64,
	issues []*pb_issue.Issue,
	mapFlowToIssue map[uint64][]*pb_flow.Flow,
	tagMap map[uint64]*pb_tag.Tag,
	userMap map[uint64]*pb_user.User,
) {
	<div class="flex flex-col">
	for _, issue := range issues {
		@shared.IssueRow(projectNo, issue, mapFlowToIssue[issue.GetNumber()], tagMap, userMap)
	}
	</div>
}